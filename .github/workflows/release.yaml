name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-matrix:
    needs: release
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64]
    steps:
    - uses: actions/checkout@v2
    - uses: wangyoucao577/go-release-action@v1.18
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        pre_command: |
          apt update && \
          apt install --no-install-recommends -y gcc-mingw-w64-x86-64 && \
          export CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc
        project_path: cmd/db2jsonschema
  docker_push:
    needs: release
    runs-on: ubuntu-20.04
    steps:
    - name: Set IMAGE_TAG
      run: echo "IMAGE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          tgallant/db2jsonschema:${{ env.IMAGE_TAG }}
          tgallant/db2jsonschema:latest
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
